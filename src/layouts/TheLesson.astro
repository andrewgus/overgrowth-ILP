---
import '../styles/root.scss'
import LocalStorageDialog from '../components/modals/LocalStorageDialog.vue'
import SkipToContent from '../components/navigation/SkipToContent.astro'
import TheLanding from '../components/landing/TheLanding.vue'
import TheLessonNav from '../components/navigation/TheLessonNav.vue'
import createID from '../composables/useCreateID'

type Props = {
	title: string
	scene: string
	gradientColor?: string
	language?: string
}
const {
	title,
	scene,
	gradientColor = 'var(--white)',
	language = 'en',
} = Astro.props
---

<!DOCTYPE html>
<html lang={language}>
	<head>
		<meta charset='UTF-8' />
		<meta name='viewport' content='width=device-width' />
		<link rel='icon' type='image/svg+xml' href='/favicon.svg' />
		<meta name='generator' content={Astro.generator} />
		<script>
			import '../scripts/setSectionsHandler.js'
			import '../scripts/hashChangeHandler.js'
			// TODO: Include header and nav elements in the canvas2HTML ignoreElements function. Include btn that will print all static content as PDF if all features are turned off. If all features are turned off and there is no static content, and therefore no sections at all, then a warning will appear in the same place as the PDF (just below the toggle switches) informing learners that there is nothing to do. v-if on the scroll to start, if there are no sections to scroll to.
		</script>
		<title>{title} &vert; FSCJ</title>
	</head>
	<body id={`${createID(title)}-lesson`}>
		<LocalStorageDialog client:load />
		<SkipToContent />
		<TheLessonNav client:load />
		<TheLanding client:load title={title} scene={scene} color={gradientColor} />
		<main id='theLessonContent'>
			<slot />
		</main>
	</body>
</html>
<style is:global lang='scss'>
	// NOTE: can I adjust grid-template-columns to be responsive?
	// NOTE: need to account for col-sets too
	#theLessonContent article.section {
		display: grid;
		grid-template-columns:
			auto [content-start] minmax(auto, 10ch) [innerContent-start] minmax(
				auto,
				60ch
			)
			[innerContent-end] minmax(auto, 10ch) [content-end] auto;
		align-content: start;
		grid-auto-rows: auto 1fr;
		min-height: 90vh;
		padding: 0 var(--s-4) var(--s-4);

		> *:not(.fullWidth) {
			grid-column: innerContent-start / innerContent-end;
		}
		> *.fullWidth {
			grid-column: content-start / content-end;
		}

		&:not(.firstSection) {
			border-top: 2px solid var(--darkGray);
		}
		&.isLocked {
			display: none;
		}
	}
	@media only screen and (max-width: 78ch) {
		#theLessonContent article.section > *:not(.fullWidth) {
			grid-column: content-start / content-end;
		}
	}
</style>
