---
/**
 * Vertically aligned layout of images and text. Creates a side-by-side layout for the two.
 */
import BaseImage from '../base/BaseImage.astro'
import { nanoid } from 'nanoid'
type Props = {
	imgName: string
	altText?: string
	align?: 'alignLeft' | 'alignRight'
	setRatio?: 'r5050' | 'r6040'
	needTextDescription?: boolean
}

const {
	imgName,
	altText = '',
	align = 'alignLeft',
	setRatio,
	needTextDescription = false,
} = Astro.props

const needID = needTextDescription ? `${Astro.self.name}-${nanoid(8)}` : ''
---

<div class:list={['fullWidth', 'sideBySide', align, setRatio]}>
	<div class='stickyImg'>
		<BaseImage describedBy={needID} imgName={imgName} altText={altText} />
	</div>
	<div id={needID} class='correspondingText'>
		<slot />
	</div>
</div>

<style lang='scss'>
	.sideBySide {
		margin: var(--s2) 0 0;
		display: flex;
		flex-flow: row wrap;
		gap: var(--s2);

		> .stickyImg {
			display: flex;
			align-items: start;
			justify-content: center;
			flex: 1.5;

			> :global(picture) {
				position: sticky;
				top: var(--s7);
				max-width: 40ch;
				max-height: 85vh;
				width: 100%;
				> :global(img) {
					object-fit: contain;
					max-width: inherit;
					max-height: inherit;
					width: inherit;
				}
			}
		}
		> .correspondingText {
			flex: 2;
		}

		&.alignRight {
			.stickyImg {
				order: 2;
			}
			.correspondingText {
				order: 1;
			}
		}
		&.r6040 {
			.stickyImg {
				flex: 3;
			}
		}
		&.r5050 {
			.stickyImg {
				flex: 1;
			}
			.correspondingText {
				flex: 1;
			}
		}
	}
</style>
