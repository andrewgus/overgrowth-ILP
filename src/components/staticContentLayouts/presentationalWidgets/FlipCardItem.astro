---
import createNanoID from '../../../composables/useCreateNanoID'
import BaseImage from '../../base/BaseImage.astro'

type PropsWithImage =
	| {
			isImage?: false | undefined
			requiredAltText?: undefined
	  }
	| {
			isImage?: true
			requiredAltText: string
	  }

type Props = PropsWithImage & {
	cardFrontContent: string
	cardBackContent: string
}
const {
	cardFrontContent,
	cardBackContent,
	isImage = false,
	requiredAltText,
} = Astro.props

const flipID = createNanoID(Astro.self.name)

const ifImage = (content: string) => {
	if (
		content.includes('.jpg') ||
		content.includes('.png') ||
		content.includes('.jpeg') ||
		content.includes('.svg')
	) {
		return true
	} else {
		return false
	}
}
---

<script>
	const flipTheCard = (cardLink: EventTarget | null) => {
		const cardToFlip = cardLink as HTMLAnchorElement
		if (!cardToFlip) return
		console.log(cardToFlip)
	}

	const cards = document.querySelectorAll('.flipCard')
	cards.forEach((card, i) => {
		card.addEventListener('click', (e) => {
			flipTheCard(e.target)
		})
	})
</script>

<div class='flipCard'>
	<a class='flipCardFront' id={`${flipID}-front`} href={`#${flipID}-back`}
		>{
			() => {
				return ifImage(cardFrontContent) ? (
					<BaseImage imgName={cardFrontContent} altText={requiredAltText} />
				) : (
					cardFrontContent
				)
			}
		}</a
	>
	<a class='flipCardBack' id={`${flipID}-back`} href={`#${flipID}-front`}
		>{cardBackContent}</a
	>
</div>

<style lang='scss'>
	@use '../../../styles/mixins/containerStyles.scss';
	.flipCard {
		@include containerStyles.flexCenter();
		@include containerStyles.darkBorder();
		min-height: 10vh;
		min-width: 10vh;
		max-width: max-content;
		background-color: var(--lightBlue);
	}
	.flipCardBack {
		transform: rotateY(180deg);
	}
</style>
